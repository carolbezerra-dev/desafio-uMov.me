{"ast":null,"code":"var _jsxFileName = \"/home/carol/desafio-uMov.me/loterias-umov.me/src/components/SenaCards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport MyContext from '../context/MyContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SenaCards() {\n  _s();\n\n  const {\n    cardNumbers\n  } = useContext(MyContext);\n  const [chosenNumbers, setChosenNumbers] = useState([]);\n\n  const handleClick = number => {\n    const numberExists = chosenNumbers.find(item => item === number);\n\n    if (!numberExists) {\n      setChosenNumbers([...chosenNumbers, number].sort());\n    } else {\n      const newChosenNumbers = chosenNumbers.filter(item => item !== number);\n      setChosenNumbers(newChosenNumbers);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: cardNumbers.map(num => /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: () => handleClick(num),\n      children: num\n    }, num, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SenaCards, \"h1omRkoG5zMuAIMAFcYRvNlA5dU=\");\n\n_c = SenaCards;\nexport default SenaCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"SenaCards\");","map":{"version":3,"sources":["/home/carol/desafio-uMov.me/loterias-umov.me/src/components/SenaCards.js"],"names":["React","useContext","useState","MyContext","SenaCards","cardNumbers","chosenNumbers","setChosenNumbers","handleClick","number","numberExists","find","item","sort","newChosenNumbers","filter","map","num"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,SAAP,MAAsB,sBAAtB;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAkBJ,UAAU,CAACE,SAAD,CAAlC;AACA,QAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMM,WAAW,GAAIC,MAAD,IAAY;AAC9B,UAAMC,YAAY,GAAGJ,aAAa,CAACK,IAAd,CAAoBC,IAAD,IAAUA,IAAI,KAAKH,MAAtC,CAArB;;AACA,QAAI,CAACC,YAAL,EAAmB;AACjBH,MAAAA,gBAAgB,CAAC,CAAC,GAAGD,aAAJ,EAAmBG,MAAnB,EAA2BI,IAA3B,EAAD,CAAhB;AACD,KAFD,MAEO;AACL,YAAMC,gBAAgB,GAAGR,aAAa,CAACS,MAAd,CAAsBH,IAAD,IAAUA,IAAI,KAAKH,MAAxC,CAAzB;AACAF,MAAAA,gBAAgB,CAACO,gBAAD,CAAhB;AACD;AACF,GARD;;AAUA,sBACE;AAAA,cACGT,WAAW,CAACW,GAAZ,CAAiBC,GAAD,iBACf;AAAgB,MAAA,OAAO,EAAE,MAAMT,WAAW,CAACS,GAAD,CAA1C;AAAA,gBACIA;AADJ,OAAWA,GAAX;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAvBQb,S;;KAAAA,S;AAyBT,eAAeA,SAAf","sourcesContent":["import React, { useContext, useState } from 'react';\nimport MyContext from '../context/MyContext';\n\nfunction SenaCards() {\n  const { cardNumbers } = useContext(MyContext);\n  const [chosenNumbers, setChosenNumbers] = useState([]);\n  \n  const handleClick = (number) => {\n    const numberExists = chosenNumbers.find((item) => item === number);\n    if (!numberExists) {\n      setChosenNumbers([...chosenNumbers, number].sort());\n    } else {\n      const newChosenNumbers = chosenNumbers.filter((item) => item !== number);\n      setChosenNumbers(newChosenNumbers);\n    }\n  }\n\n  return (\n    <div>\n      {cardNumbers.map((num) => (\n        <span key={num} onClick={() => handleClick(num) }>\n          { num }\n        </span>\n        ))}\n    </div>\n  );\n}\n\nexport default SenaCards;\n"]},"metadata":{},"sourceType":"module"}